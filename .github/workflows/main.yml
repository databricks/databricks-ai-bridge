name: tests

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          pip install -r requirements/lint-requirements.txt
      - name: Lint Python code with ruff
        run: |
          ruff check .
          ruff format --check .

  core_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install .[dev]
      - name: Run tests
        run: |
          pytest tests/

  langchain_test:
    runs-on: ubuntu-latest
    name: langchain_test (${{ matrix.python-version }}, ${{ matrix.version.name }})
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        version: 
        - {ref: "", name: "current"}
        - {ref: "databricks-ai-v0.4.0", name: "v0.4.0"}
        - {ref: "databricks-ai-v0.3.0", name: "v0.3.0"}
        - {ref: "databricks-ai-v0.2.0", name: "v0.2.0"}
        - {ref: "databricks-ai-v0.1.0", name: "v0.1.0"}
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install .
      - name: Checkout langchain version
        uses: actions/checkout@v4
        with:
          ref: ${{ matrix.version.ref == '' && github.sha || matrix.version.ref }}
          fetch-depth: 1
          path: older-version
      - name: Replace langchain with older version
        run: |
          # Remove current langchain if it exists to avoid conflicts
          rm -rf integrations/langchain
          
          # Copy older version of langchain to the main repo
          cp -r older-version/integrations/langchain integrations/
      - name: Install langchain dependency
        run: |
          pip install integrations/langchain[dev]
      - name: Run tests
        run: |
          pytest integrations/langchain/tests/unit_tests

  openai_test:
    runs-on: ubuntu-latest
    name: openai_test (${{ matrix.python-version }}, ${{ matrix.version.name }})
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        version:
        - {ref: "", name: "current"}
        - {ref: "databricks-ai-v0.4.0", name: "v0.4.0"}
        - {ref: "databricks-ai-v0.3.0", name: "v0.3.0"}
        - {ref: "databricks-ai-v0.2.0", name: "v0.2.0"}
        - {ref: "databricks-ai-v0.1.0", name: "v0.1.0"}
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ matrix.version.ref == '' && github.sha || matrix.version.ref }}
          fetch-depth: 1
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install .
          pip install integrations/openai[dev]
      - name: Run tests
        run: |
          pytest integrations/openai/tests/unit_tests

  llamaindex_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install .
          pip install integrations/llamaindex[dev]
      - name: Run tests
        run: |
          pytest integrations/llamaindex/tests/unit_tests
